<Workspace Version="1.0.0.1180" X="332.737290911901" Y="294.362228057867" zoom="0.541980139636015" Name="bimorph.GetScheduleDataRows" Description="Get the specified row data from a given schedule as strings&#xD;&#xA;&#xD;&#xA;Schedules have a blank row after the headings. Row indexes start at 0" ID="9072bae5-4785-47ce-8827-0b005c3daa2e" Category="BimorphNodes.Revit.Schedule.Query">
  <NamespaceResolutionMap />
  <Elements>
    <PythonNodeModels.PythonNode guid="dac584a2-e66e-422f-aa91-4330ffeb766b" type="PythonNodeModels.PythonNode" nickname="Python Script" x="720.313108248709" y="204.339358833024" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="2">
      <Script>#Copyright 2016. All rights reserved. Bimorph Consultancy LTD, 5 St Johns Lane, London EC1M 4BH www.bimorph.co.uk
#Written by Thomas Mahon @Thomas__Mahon info@bimorph.co.uk Package: bimorphNodes
#GitHub: https://github.com/ThomasMahon/bimorphNodes/
#Follow: facebook.com/bimorphBIM | linkedin.com/company/bimorph-bim | @bimorphBIM

import clr

# Import DocumentManager and TransactionManager
clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager

# Import RevitAPI
clr.AddReference("RevitAPI")
import Autodesk
from Autodesk.Revit.DB import *

doc = DocumentManager.Instance.CurrentDBDocument

scheduleName = IN[0]
rowIndexes = IN[1]

if isinstance(rowIndexes, list):
	indexList = rowIndexes
else:
	indexList = [rowIndexes]

collector = FilteredElementCollector(doc)
collector.OfClass( ViewSchedule );
elementlist = collector.ToElements()

if isinstance(scheduleName, str):
	schedule = None
	for i in elementlist:
		scheduleViewName = BuiltInParameter.VIEW_NAME
		viewName = i.get_Parameter( scheduleViewName ).AsString()
		
		if viewName == scheduleName:
			schedule = i
			break
else:
	schedule = UnwrapElement(scheduleName)

table = schedule.GetTableData()
section = table.GetSectionData(SectionType.Body)
nRows = section.NumberOfRows
nColumns = section.NumberOfColumns

rowList = []
for row in indexList: 
	if row &lt; nRows: 
		rowData = []
		for c in range(nColumns): 
			rowData.Add( TableView.GetCellText(schedule, SectionType.Body, row, c) )
		rowList.Add( rowData )

OUT = rowList</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="4af5d6d7-5470-4f50-9a6d-fbf61c614b52" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="886.177461441594" y="204.885893290046" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <Symbol value="scheduleDataRow" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="66ed091e-d10e-4bc9-a30d-afaf5985677c" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="122.774035048586" y="165.152513579884" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="//Enter the Revit schedule view or the schedule name as a string&#xD;&#xA;scheduleViewOrName:var" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="397967ce-ecf0-4cdd-8768-b0262945a2d9" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="65.4886047772302" y="252.697486262191" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="//Enter the index or indexes of the required rows. Indexes start from 0&#xD;&#xA;rowIndexes:int[]..[]" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="dac584a2-e66e-422f-aa91-4330ffeb766b" start_index="0" end="4af5d6d7-5470-4f50-9a6d-fbf61c614b52" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="66ed091e-d10e-4bc9-a30d-afaf5985677c" start_index="0" end="dac584a2-e66e-422f-aa91-4330ffeb766b" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="397967ce-ecf0-4cdd-8768-b0262945a2d9" start_index="0" end="dac584a2-e66e-422f-aa91-4330ffeb766b" end_index="1" portType="0" />
  </Connectors>
  <Notes>
    <Dynamo.Graph.Notes.NoteModel guid="3cb12a06-4704-4dfd-82a8-cf2abeca4e7a" text="AUTHOR + COPYRIGHT&#xD;&#xA;________________________________________________________&#xD;&#xA;&#xD;&#xA;Copyright 2016 Bimorph Consultancy &#xD;&#xA;Thomas Mahon&#xD;&#xA;@Thomas__Mahon" x="-265.168551292555" y="114.860579097954" />
    <Dynamo.Graph.Notes.NoteModel guid="cb31ec58-c40d-41f9-bcb8-112c7cfe4584" text="CONTACT&#xD;&#xA;________________________________________________________&#xD;&#xA;&#xD;&#xA;www.bimorph.co.uk&#xD;&#xA;&#xD;&#xA;info@bimorph.co.uk&#xD;&#xA;@bimorphBIM" x="-265.79468690895" y="230.672871366412" />
    <Dynamo.Graph.Notes.NoteModel guid="de2506ca-317b-48dc-baba-6eb02f0157ec" text="PACKAGE NAME&#xD;&#xA;________________________________________________________&#xD;&#xA;&#xD;&#xA;bimorphNodes" x="-265.822700333613" y="30.0830923800073" />
    <Dynamo.Graph.Notes.NoteModel guid="4c053957-66af-4b87-bae5-1d6d18585251" text="GITHUB&#xD;&#xA;________________________________________________________&#xD;&#xA;&#xD;&#xA;To report bugs or suggest improvements or new features, visit:&#xD;&#xA;&#xD;&#xA;https://github.com/ThomasMahon/bimorphNodes/" x="-264.870156106656" y="525.719052352162" />
    <Dynamo.Graph.Notes.NoteModel guid="2b554e52-7c0e-45bb-840c-62cf0989d0ac" text="FOLLOW US&#xD;&#xA;________________________________________________________&#xD;&#xA;&#xD;&#xA;Follow us to get the latest news on bimorph digital engineering and updates to bimorphNodes:&#xD;&#xA;&#xD;&#xA;FACEBOOK:  facebook.com/bimorphBIM&#xD;&#xA;LINKEDIN:  linkedin.com/company/bimorph-bim&#xD;&#xA;TWITTER:  @bimorphBIM" x="-265.715697161039" y="361.729081437652" />
  </Notes>
  <Annotations>
    <Dynamo.Graph.Annotations.AnnotationModel guid="bcce16d7-4389-4244-8026-6dc93b88c7cc" annotationText="NODE DETAILS" left="-275.822700333613" top="-23.250240953326" width="319.619210893623" height="679.635959972155" fontSize="36" InitialTop="30.0830923800073" InitialHeight="635.635959972155" TextblockHeight="43.3333333333333" backgrouund="#FFD8D8D8">
      <Models ModelGuid="3cb12a06-4704-4dfd-82a8-cf2abeca4e7a" />
      <Models ModelGuid="cb31ec58-c40d-41f9-bcb8-112c7cfe4584" />
      <Models ModelGuid="de2506ca-317b-48dc-baba-6eb02f0157ec" />
      <Models ModelGuid="4c053957-66af-4b87-bae5-1d6d18585251" />
      <Models ModelGuid="2b554e52-7c0e-45bb-840c-62cf0989d0ac" />
    </Dynamo.Graph.Annotations.AnnotationModel>
  </Annotations>
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>