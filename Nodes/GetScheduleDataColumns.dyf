<Workspace Version="1.2.0.2690" X="436.928361550405" Y="144.466696486599" zoom="0.739296446812279" Name="GetScheduleDataColumns" Description="Get the specified column data from a given schedule as strings&#xD;&#xA;&#xD;&#xA;Column indexes start at 0" ID="09ae7b18-939b-486e-aba1-f14192e3754f" Category="BimorphNodes.Revit.Schedule.Query">
  <NamespaceResolutionMap />
  <Elements>
    <PythonNodeModels.PythonNode guid="dac584a2-e66e-422f-aa91-4330ffeb766b" type="PythonNodeModels.PythonNode" nickname="Python Script" x="721.214866494053" y="204.809279367807" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="2">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <Script>#Copyright 2016. All rights reserved. Bimorph Consultancy LTD, 5 St Johns Lane, London EC1M 4BH www.bimorph.co.uk
#Written by Thomas Mahon @Thomas__Mahon info@bimorph.co.uk Package: bimorphNodes
#GitHub: https://github.com/ThomasMahon/bimorphNodes/

import clr

# Import DocumentManager and TransactionManager
clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager

# Import RevitAPI
clr.AddReference("RevitAPI")
import Autodesk
from Autodesk.Revit.DB import *

doc = DocumentManager.Instance.CurrentDBDocument

sheetListName = IN[0]
columnIndexes = IN[1]

if isinstance(columnIndexes, list):
	indexList = columnIndexes
else:
	indexList = [columnIndexes]

collector = FilteredElementCollector(doc)
collector.OfClass( ViewSchedule );
elementlist = collector.ToElements()

schedule = None
for i in elementlist:
	scheduleViewName = BuiltInParameter.VIEW_NAME
	viewName = i.get_Parameter(scheduleViewName).AsString()
	
	if viewName == sheetListName:
		schedule = i
		break

table = schedule.GetTableData()
section = table.GetSectionData(SectionType.Body)
nRows = section.NumberOfRows
nColumns = section.NumberOfColumns

columnList = []
for column in indexList: 
	if column &lt; nColumns:
		columnData = []
		for r in range(nRows): 
			columnData.Add( TableView.GetCellText(schedule, SectionType.Body, r, column) )
		columnList.Add( columnData )

OUT = columnList</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="4af5d6d7-5470-4f50-9a6d-fbf61c614b52" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="886.177461441594" y="204.885893290046" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="scheduleColumnData" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="66ed091e-d10e-4bc9-a30d-afaf5985677c" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="337.435906897452" y="176.266198202725" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="//Enter the name of the schedule&#xD;&#xA;scheduleName:string" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="397967ce-ecf0-4cdd-8768-b0262945a2d9" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="65.4886047772302" y="252.697486262191" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="//Enter the index or indexes of the required columns. Indexes start from 0&#xD;&#xA;columnIndexes:int[]..[]" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="dac584a2-e66e-422f-aa91-4330ffeb766b" start_index="0" end="4af5d6d7-5470-4f50-9a6d-fbf61c614b52" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="66ed091e-d10e-4bc9-a30d-afaf5985677c" start_index="0" end="dac584a2-e66e-422f-aa91-4330ffeb766b" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="397967ce-ecf0-4cdd-8768-b0262945a2d9" start_index="0" end="dac584a2-e66e-422f-aa91-4330ffeb766b" end_index="1" portType="0" />
  </Connectors>
  <Notes>
    <Dynamo.Graph.Notes.NoteModel guid="c6251cab-7027-47f7-a4ae-6783a523ff15" text="AUTHOR&#xD;&#xA;________________________________________________________&#xD;&#xA;&#xD;&#xA;Copyright 2016 Thomas Mahon&#xD;&#xA;@Thomas__Mahon" x="-324.592677033942" y="221.815874796784" />
    <Dynamo.Graph.Notes.NoteModel guid="955a90ae-8329-402e-ba84-68744b4c50d3" text="CONTACT&#xD;&#xA;________________________________________________________&#xD;&#xA;&#xD;&#xA;www.bimorph.co.uk&#xD;&#xA;&#xD;&#xA;info@bimorph.co.uk&#xD;&#xA;@bimorphBIM" x="-324.454901918874" y="331.790002239104" />
    <Dynamo.Graph.Notes.NoteModel guid="ce3548a1-6cec-4136-ac99-06dbebe424b8" text="PACKAGE NAME&#xD;&#xA;________________________________________________________&#xD;&#xA;&#xD;&#xA;bimorphNodes" x="-323.401642767845" y="137.499683905625" />
    <Dynamo.Graph.Notes.NoteModel guid="f30e546c-5a7c-459d-976b-68125b03c153" text="GITHUB&#xD;&#xA;________________________________________________________&#xD;&#xA;&#xD;&#xA;https://github.com/ThomasMahon/bimorphNodes/" x="-322.632682117298" y="466.080320572583" />
  </Notes>
  <Annotations>
    <Dynamo.Graph.Annotations.AnnotationModel guid="8b65282c-f81b-40da-b2e7-f9c2e2c87784" annotationText="NODE DETAILS" left="-334.592677033942" top="84.1663505722921" width="320.62666158331" height="469.247303333624" fontSize="36" InitialTop="137.499683905625" InitialHeight="468.580636666957" TextblockHeight="43.3333333333333" backgrouund="#FFD8D8D8">
      <Models ModelGuid="c6251cab-7027-47f7-a4ae-6783a523ff15" />
      <Models ModelGuid="955a90ae-8329-402e-ba84-68744b4c50d3" />
      <Models ModelGuid="ce3548a1-6cec-4136-ac99-06dbebe424b8" />
      <Models ModelGuid="f30e546c-5a7c-459d-976b-68125b03c153" />
    </Dynamo.Graph.Annotations.AnnotationModel>
  </Annotations>
  <Presets />
</Workspace>